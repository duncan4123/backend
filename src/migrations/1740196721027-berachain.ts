import { MigrationInterface, QueryRunner } from "typeorm";

export class AddBerachainEnum1740196721027 implements MigrationInterface {
    name = 'AddBerachainEnum1740196721027'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TYPE "public"."tokens_blockchaintype_enum" RENAME TO "tokens_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."tokens_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "tokens" ALTER COLUMN "blockchainType" TYPE "public"."tokens_blockchaintype_enum" USING "blockchainType"::"text"::"public"."tokens_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tokens_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."tokens_exchangeid_enum" RENAME TO "tokens_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."tokens_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "tokens" ALTER COLUMN "exchangeId" TYPE "public"."tokens_exchangeid_enum" USING "exchangeId"::"text"::"public"."tokens_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tokens_exchangeid_enum_old"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_488c5516e8c72b2686e744bfed"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e8b3d16260b7dea43e343e3366"`);
        await queryRunner.query(`ALTER TABLE "tvl" DROP CONSTRAINT "UQ_837985c1c667096fcb6aba2a437"`);
        await queryRunner.query(`ALTER TYPE "public"."tvl_blockchaintype_enum" RENAME TO "tvl_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."tvl_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "tvl" ALTER COLUMN "blockchainType" TYPE "public"."tvl_blockchaintype_enum" USING "blockchainType"::"text"::"public"."tvl_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tvl_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."tvl_exchangeid_enum" RENAME TO "tvl_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."tvl_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "tvl" ALTER COLUMN "exchangeId" TYPE "public"."tvl_exchangeid_enum" USING "exchangeId"::"text"::"public"."tvl_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tvl_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TABLE "total-tvl" DROP CONSTRAINT "UQ_7fe5b00781f6564ec055b4f88ab"`);
        await queryRunner.query(`ALTER TYPE "public"."total-tvl_blockchaintype_enum" RENAME TO "total-tvl_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."total-tvl_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "total-tvl" ALTER COLUMN "blockchainType" TYPE "public"."total-tvl_blockchaintype_enum" USING "blockchainType"::"text"::"public"."total-tvl_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."total-tvl_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."total-tvl_exchangeid_enum" RENAME TO "total-tvl_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."total-tvl_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "total-tvl" ALTER COLUMN "exchangeId" TYPE "public"."total-tvl_exchangeid_enum" USING "exchangeId"::"text"::"public"."total-tvl_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."total-tvl_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."blocks_blockchaintype_enum" RENAME TO "blocks_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."blocks_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "blocks" ALTER COLUMN "blockchainType" TYPE "public"."blocks_blockchaintype_enum" USING "blockchainType"::"text"::"public"."blocks_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_89f2258231d48af5d0d43e3ecd"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2342ae203567a867b6fe366929"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1117c3f900aaa2af9d97c39513"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e84271b4e93070bc7a68cabc9e"`);
        await queryRunner.query(`ALTER TYPE "public"."tokens-traded-events_blockchaintype_enum" RENAME TO "tokens-traded-events_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."tokens-traded-events_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "tokens-traded-events" ALTER COLUMN "blockchainType" TYPE "public"."tokens-traded-events_blockchaintype_enum" USING "blockchainType"::"text"::"public"."tokens-traded-events_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tokens-traded-events_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."tokens-traded-events_exchangeid_enum" RENAME TO "tokens-traded-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."tokens-traded-events_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "tokens-traded-events" ALTER COLUMN "exchangeId" TYPE "public"."tokens-traded-events_exchangeid_enum" USING "exchangeId"::"text"::"public"."tokens-traded-events_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."tokens-traded-events_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."pairs_blockchaintype_enum" RENAME TO "pairs_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."pairs_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "pairs" ALTER COLUMN "blockchainType" TYPE "public"."pairs_blockchaintype_enum" USING "blockchainType"::"text"::"public"."pairs_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."pairs_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."pairs_exchangeid_enum" RENAME TO "pairs_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."pairs_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "pairs" ALTER COLUMN "exchangeId" TYPE "public"."pairs_exchangeid_enum" USING "exchangeId"::"text"::"public"."pairs_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."pairs_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TABLE "strategies" DROP CONSTRAINT "UQ_ca3ef6c54f8acf3f8acd7e14e32"`);
        await queryRunner.query(`ALTER TYPE "public"."strategies_blockchaintype_enum" RENAME TO "strategies_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."strategies_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "strategies" ALTER COLUMN "blockchainType" TYPE "public"."strategies_blockchaintype_enum" USING "blockchainType"::"text"::"public"."strategies_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."strategies_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."strategies_exchangeid_enum" RENAME TO "strategies_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."strategies_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "strategies" ALTER COLUMN "exchangeId" TYPE "public"."strategies_exchangeid_enum" USING "exchangeId"::"text"::"public"."strategies_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."strategies_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."quotes_blockchaintype_enum" RENAME TO "quotes_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."quotes_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "quotes" ALTER COLUMN "blockchainType" TYPE "public"."quotes_blockchaintype_enum" USING "blockchainType"::"text"::"public"."quotes_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."quotes_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9e13b1c45c5d2beb1b69711236"`);
        await queryRunner.query(`ALTER TYPE "public"."historic-quotes_blockchaintype_enum" RENAME TO "historic-quotes_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."historic-quotes_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "historic-quotes" ALTER COLUMN "blockchainType" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "historic-quotes" ALTER COLUMN "blockchainType" TYPE "public"."historic-quotes_blockchaintype_enum" USING "blockchainType"::"text"::"public"."historic-quotes_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TABLE "historic-quotes" ALTER COLUMN "blockchainType" SET DEFAULT 'ethereum'`);
        await queryRunner.query(`DROP TYPE "public"."historic-quotes_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT "UQ_1a24b75ad87c83b0761f6e00135"`);
        await queryRunner.query(`ALTER TYPE "public"."activities_blockchaintype_enum" RENAME TO "activities_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."activities_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "activities" ALTER COLUMN "blockchainType" TYPE "public"."activities_blockchaintype_enum" USING "blockchainType"::"text"::"public"."activities_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."activities_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."activities_exchangeid_enum" RENAME TO "activities_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."activities_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "activities" ALTER COLUMN "exchangeId" TYPE "public"."activities_exchangeid_enum" USING "exchangeId"::"text"::"public"."activities_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."activities_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."voucher-transfer-events_blockchaintype_enum" RENAME TO "voucher-transfer-events_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."voucher-transfer-events_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "voucher-transfer-events" ALTER COLUMN "blockchainType" TYPE "public"."voucher-transfer-events_blockchaintype_enum" USING "blockchainType"::"text"::"public"."voucher-transfer-events_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."voucher-transfer-events_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."voucher-transfer-events_exchangeid_enum" RENAME TO "voucher-transfer-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."voucher-transfer-events_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "voucher-transfer-events" ALTER COLUMN "exchangeId" TYPE "public"."voucher-transfer-events_exchangeid_enum" USING "exchangeId"::"text"::"public"."voucher-transfer-events_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."voucher-transfer-events_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."trading-fee-ppm-updated-events_blockchaintype_enum" RENAME TO "trading-fee-ppm-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."trading-fee-ppm-updated-events_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "trading-fee-ppm-updated-events" ALTER COLUMN "blockchainType" TYPE "public"."trading-fee-ppm-updated-events_blockchaintype_enum" USING "blockchainType"::"text"::"public"."trading-fee-ppm-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."trading-fee-ppm-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."trading-fee-ppm-updated-events_exchangeid_enum" RENAME TO "trading-fee-ppm-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."trading-fee-ppm-updated-events_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "trading-fee-ppm-updated-events" ALTER COLUMN "exchangeId" TYPE "public"."trading-fee-ppm-updated-events_exchangeid_enum" USING "exchangeId"::"text"::"public"."trading-fee-ppm-updated-events_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."trading-fee-ppm-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-deleted-events_blockchaintype_enum" RENAME TO "strategy-deleted-events_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-deleted-events_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "strategy-deleted-events" ALTER COLUMN "blockchainType" TYPE "public"."strategy-deleted-events_blockchaintype_enum" USING "blockchainType"::"text"::"public"."strategy-deleted-events_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-deleted-events_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-deleted-events_exchangeid_enum" RENAME TO "strategy-deleted-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-deleted-events_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "strategy-deleted-events" ALTER COLUMN "exchangeId" TYPE "public"."strategy-deleted-events_exchangeid_enum" USING "exchangeId"::"text"::"public"."strategy-deleted-events_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-deleted-events_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-updated-events_blockchaintype_enum" RENAME TO "strategy-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-updated-events_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "strategy-updated-events" ALTER COLUMN "blockchainType" TYPE "public"."strategy-updated-events_blockchaintype_enum" USING "blockchainType"::"text"::"public"."strategy-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-updated-events_exchangeid_enum" RENAME TO "strategy-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-updated-events_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "strategy-updated-events" ALTER COLUMN "exchangeId" TYPE "public"."strategy-updated-events_exchangeid_enum" USING "exchangeId"::"text"::"public"."strategy-updated-events_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum" RENAME TO "pair-trading-fee-ppm-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "pair-trading-fee-ppm-updated-events" ALTER COLUMN "blockchainType" TYPE "public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum" USING "blockchainType"::"text"::"public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."pair-trading-fee-ppm-updated-events_exchangeid_enum" RENAME TO "pair-trading-fee-ppm-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."pair-trading-fee-ppm-updated-events_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "pair-trading-fee-ppm-updated-events" ALTER COLUMN "exchangeId" TYPE "public"."pair-trading-fee-ppm-updated-events_exchangeid_enum" USING "exchangeId"::"text"::"public"."pair-trading-fee-ppm-updated-events_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."pair-trading-fee-ppm-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."pair-created-events_blockchaintype_enum" RENAME TO "pair-created-events_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."pair-created-events_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "pair-created-events" ALTER COLUMN "blockchainType" TYPE "public"."pair-created-events_blockchaintype_enum" USING "blockchainType"::"text"::"public"."pair-created-events_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."pair-created-events_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."pair-created-events_exchangeid_enum" RENAME TO "pair-created-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."pair-created-events_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "pair-created-events" ALTER COLUMN "exchangeId" TYPE "public"."pair-created-events_exchangeid_enum" USING "exchangeId"::"text"::"public"."pair-created-events_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."pair-created-events_exchangeid_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-created-events_blockchaintype_enum" RENAME TO "strategy-created-events_blockchaintype_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-created-events_blockchaintype_enum" AS ENUM('ethereum', 'sei-network', 'celo', 'blast', 'iota-evm', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "strategy-created-events" ALTER COLUMN "blockchainType" TYPE "public"."strategy-created-events_blockchaintype_enum" USING "blockchainType"::"text"::"public"."strategy-created-events_blockchaintype_enum"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-created-events_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-created-events_exchangeid_enum" RENAME TO "strategy-created-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-created-events_exchangeid_enum" AS ENUM('ethereum', 'sei', 'celo', 'blast', 'iota', 'mantle', 'berachain')`);
        await queryRunner.query(`ALTER TABLE "strategy-created-events" ALTER COLUMN "exchangeId" TYPE "public"."strategy-created-events_exchangeid_enum" USING "exchangeId"::"text"::"public"."strategy-created-events_exchangeid_enum"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-created-events_exchangeid_enum_old"`);
        await queryRunner.query(`CREATE INDEX "IDX_488c5516e8c72b2686e744bfed" ON "tvl" ("address", "blockchainType", "exchangeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_e8b3d16260b7dea43e343e3366" ON "tvl" ("pairId", "blockchainType", "exchangeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_89f2258231d48af5d0d43e3ecd" ON "tokens-traded-events" ("trader", "blockchainType", "exchangeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_2342ae203567a867b6fe366929" ON "tokens-traded-events" ("targetTokenId", "blockchainType", "exchangeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_1117c3f900aaa2af9d97c39513" ON "tokens-traded-events" ("sourceTokenId", "blockchainType", "exchangeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_e84271b4e93070bc7a68cabc9e" ON "tokens-traded-events" ("pairId", "blockchainType", "exchangeId") `);
        await queryRunner.query(`CREATE INDEX "IDX_9e13b1c45c5d2beb1b69711236" ON "historic-quotes" ("blockchainType", "tokenAddress", "timestamp") `);
        await queryRunner.query(`ALTER TABLE "tvl" ADD CONSTRAINT "UQ_837985c1c667096fcb6aba2a437" UNIQUE ("blockchainType", "exchangeId", "strategyId", "pairName", "symbol", "tvl", "address", "evt_block_time", "evt_block_number", "reason", "transaction_index")`);
        await queryRunner.query(`ALTER TABLE "total-tvl" ADD CONSTRAINT "UQ_7fe5b00781f6564ec055b4f88ab" UNIQUE ("blockchainType", "exchangeId", "timestamp")`);
        await queryRunner.query(`ALTER TABLE "strategies" ADD CONSTRAINT "UQ_ca3ef6c54f8acf3f8acd7e14e32" UNIQUE ("blockchainType", "exchangeId", "strategyId")`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "UQ_1a24b75ad87c83b0761f6e00135" UNIQUE ("blockchainType", "exchangeId", "strategyId", "action", "baseQuote", "baseSellToken", "baseSellTokenAddress", "quoteBuyToken", "quoteBuyTokenAddress", "buyBudget", "sellBudget", "buyPriceA", "buyPriceMarg", "buyPriceB", "sellPriceA", "sellPriceMarg", "sellPriceB", "timestamp", "txhash", "blockNumber")`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "activities" DROP CONSTRAINT "UQ_1a24b75ad87c83b0761f6e00135"`);
        await queryRunner.query(`ALTER TABLE "strategies" DROP CONSTRAINT "UQ_ca3ef6c54f8acf3f8acd7e14e32"`);
        await queryRunner.query(`ALTER TABLE "total-tvl" DROP CONSTRAINT "UQ_7fe5b00781f6564ec055b4f88ab"`);
        await queryRunner.query(`ALTER TABLE "tvl" DROP CONSTRAINT "UQ_837985c1c667096fcb6aba2a437"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_9e13b1c45c5d2beb1b69711236"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e84271b4e93070bc7a68cabc9e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_1117c3f900aaa2af9d97c39513"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2342ae203567a867b6fe366929"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_89f2258231d48af5d0d43e3ecd"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e8b3d16260b7dea43e343e3366"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_488c5516e8c72b2686e744bfed"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-created-events_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "strategy-created-events" ALTER COLUMN "exchangeId" TYPE "public"."strategy-created-events_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."strategy-created-events_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-created-events_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-created-events_exchangeid_enum_old" RENAME TO "strategy-created-events_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-created-events_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "strategy-created-events" ALTER COLUMN "blockchainType" TYPE "public"."strategy-created-events_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."strategy-created-events_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-created-events_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-created-events_blockchaintype_enum_old" RENAME TO "strategy-created-events_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."pair-created-events_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "pair-created-events" ALTER COLUMN "exchangeId" TYPE "public"."pair-created-events_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."pair-created-events_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."pair-created-events_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."pair-created-events_exchangeid_enum_old" RENAME TO "pair-created-events_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."pair-created-events_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "pair-created-events" ALTER COLUMN "blockchainType" TYPE "public"."pair-created-events_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."pair-created-events_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."pair-created-events_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."pair-created-events_blockchaintype_enum_old" RENAME TO "pair-created-events_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."pair-trading-fee-ppm-updated-events_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "pair-trading-fee-ppm-updated-events" ALTER COLUMN "exchangeId" TYPE "public"."pair-trading-fee-ppm-updated-events_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."pair-trading-fee-ppm-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."pair-trading-fee-ppm-updated-events_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."pair-trading-fee-ppm-updated-events_exchangeid_enum_old" RENAME TO "pair-trading-fee-ppm-updated-events_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "pair-trading-fee-ppm-updated-events" ALTER COLUMN "blockchainType" TYPE "public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."pair-trading-fee-ppm-updated-events_blockchaintype_enum_old" RENAME TO "pair-trading-fee-ppm-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-updated-events_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "strategy-updated-events" ALTER COLUMN "exchangeId" TYPE "public"."strategy-updated-events_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."strategy-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-updated-events_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-updated-events_exchangeid_enum_old" RENAME TO "strategy-updated-events_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-updated-events_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "strategy-updated-events" ALTER COLUMN "blockchainType" TYPE "public"."strategy-updated-events_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."strategy-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-updated-events_blockchaintype_enum_old" RENAME TO "strategy-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-deleted-events_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "strategy-deleted-events" ALTER COLUMN "exchangeId" TYPE "public"."strategy-deleted-events_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."strategy-deleted-events_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-deleted-events_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-deleted-events_exchangeid_enum_old" RENAME TO "strategy-deleted-events_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."strategy-deleted-events_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "strategy-deleted-events" ALTER COLUMN "blockchainType" TYPE "public"."strategy-deleted-events_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."strategy-deleted-events_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."strategy-deleted-events_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."strategy-deleted-events_blockchaintype_enum_old" RENAME TO "strategy-deleted-events_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."trading-fee-ppm-updated-events_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "trading-fee-ppm-updated-events" ALTER COLUMN "exchangeId" TYPE "public"."trading-fee-ppm-updated-events_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."trading-fee-ppm-updated-events_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."trading-fee-ppm-updated-events_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."trading-fee-ppm-updated-events_exchangeid_enum_old" RENAME TO "trading-fee-ppm-updated-events_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."trading-fee-ppm-updated-events_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "trading-fee-ppm-updated-events" ALTER COLUMN "blockchainType" TYPE "public"."trading-fee-ppm-updated-events_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."trading-fee-ppm-updated-events_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."trading-fee-ppm-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."trading-fee-ppm-updated-events_blockchaintype_enum_old" RENAME TO "trading-fee-ppm-updated-events_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."voucher-transfer-events_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "voucher-transfer-events" ALTER COLUMN "exchangeId" TYPE "public"."voucher-transfer-events_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."voucher-transfer-events_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."voucher-transfer-events_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."voucher-transfer-events_exchangeid_enum_old" RENAME TO "voucher-transfer-events_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."voucher-transfer-events_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "voucher-transfer-events" ALTER COLUMN "blockchainType" TYPE "public"."voucher-transfer-events_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."voucher-transfer-events_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."voucher-transfer-events_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."voucher-transfer-events_blockchaintype_enum_old" RENAME TO "voucher-transfer-events_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."activities_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "activities" ALTER COLUMN "exchangeId" TYPE "public"."activities_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."activities_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."activities_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."activities_exchangeid_enum_old" RENAME TO "activities_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."activities_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "activities" ALTER COLUMN "blockchainType" TYPE "public"."activities_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."activities_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."activities_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."activities_blockchaintype_enum_old" RENAME TO "activities_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TABLE "activities" ADD CONSTRAINT "UQ_1a24b75ad87c83b0761f6e00135" UNIQUE ("blockchainType", "exchangeId", "strategyId", "action", "baseQuote", "baseSellToken", "baseSellTokenAddress", "quoteBuyToken", "quoteBuyTokenAddress", "buyBudget", "sellBudget", "buyPriceA", "buyPriceMarg", "buyPriceB", "sellPriceA", "sellPriceMarg", "sellPriceB", "timestamp", "txhash", "blockNumber")`);
        await queryRunner.query(`CREATE TYPE "public"."historic-quotes_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "historic-quotes" ALTER COLUMN "blockchainType" DROP DEFAULT`);
        await queryRunner.query(`ALTER TABLE "historic-quotes" ALTER COLUMN "blockchainType" TYPE "public"."historic-quotes_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."historic-quotes_blockchaintype_enum_old"`);
        await queryRunner.query(`ALTER TABLE "historic-quotes" ALTER COLUMN "blockchainType" SET DEFAULT 'ethereum'`);
        await queryRunner.query(`DROP TYPE "public"."historic-quotes_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."historic-quotes_blockchaintype_enum_old" RENAME TO "historic-quotes_blockchaintype_enum"`);
        await queryRunner.query(`CREATE INDEX "IDX_9e13b1c45c5d2beb1b69711236" ON "historic-quotes" ("blockchainType", "timestamp", "tokenAddress") `);
        await queryRunner.query(`CREATE TYPE "public"."quotes_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "quotes" ALTER COLUMN "blockchainType" TYPE "public"."quotes_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."quotes_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."quotes_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."quotes_blockchaintype_enum_old" RENAME TO "quotes_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."strategies_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "strategies" ALTER COLUMN "exchangeId" TYPE "public"."strategies_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."strategies_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."strategies_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."strategies_exchangeid_enum_old" RENAME TO "strategies_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."strategies_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "strategies" ALTER COLUMN "blockchainType" TYPE "public"."strategies_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."strategies_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."strategies_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."strategies_blockchaintype_enum_old" RENAME TO "strategies_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TABLE "strategies" ADD CONSTRAINT "UQ_ca3ef6c54f8acf3f8acd7e14e32" UNIQUE ("blockchainType", "exchangeId", "strategyId")`);
        await queryRunner.query(`CREATE TYPE "public"."pairs_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "pairs" ALTER COLUMN "exchangeId" TYPE "public"."pairs_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."pairs_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."pairs_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."pairs_exchangeid_enum_old" RENAME TO "pairs_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."pairs_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "pairs" ALTER COLUMN "blockchainType" TYPE "public"."pairs_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."pairs_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."pairs_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."pairs_blockchaintype_enum_old" RENAME TO "pairs_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."tokens-traded-events_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "tokens-traded-events" ALTER COLUMN "exchangeId" TYPE "public"."tokens-traded-events_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."tokens-traded-events_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."tokens-traded-events_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."tokens-traded-events_exchangeid_enum_old" RENAME TO "tokens-traded-events_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."tokens-traded-events_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "tokens-traded-events" ALTER COLUMN "blockchainType" TYPE "public"."tokens-traded-events_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."tokens-traded-events_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."tokens-traded-events_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."tokens-traded-events_blockchaintype_enum_old" RENAME TO "tokens-traded-events_blockchaintype_enum"`);
        await queryRunner.query(`CREATE INDEX "IDX_e84271b4e93070bc7a68cabc9e" ON "tokens-traded-events" ("blockchainType", "exchangeId", "pairId") `);
        await queryRunner.query(`CREATE INDEX "IDX_1117c3f900aaa2af9d97c39513" ON "tokens-traded-events" ("blockchainType", "exchangeId", "sourceTokenId") `);
        await queryRunner.query(`CREATE INDEX "IDX_2342ae203567a867b6fe366929" ON "tokens-traded-events" ("blockchainType", "exchangeId", "targetTokenId") `);
        await queryRunner.query(`CREATE INDEX "IDX_89f2258231d48af5d0d43e3ecd" ON "tokens-traded-events" ("blockchainType", "exchangeId", "trader") `);
        await queryRunner.query(`CREATE TYPE "public"."blocks_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "blocks" ALTER COLUMN "blockchainType" TYPE "public"."blocks_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."blocks_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."blocks_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."blocks_blockchaintype_enum_old" RENAME TO "blocks_blockchaintype_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."total-tvl_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "total-tvl" ALTER COLUMN "exchangeId" TYPE "public"."total-tvl_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."total-tvl_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."total-tvl_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."total-tvl_exchangeid_enum_old" RENAME TO "total-tvl_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."total-tvl_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "total-tvl" ALTER COLUMN "blockchainType" TYPE "public"."total-tvl_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."total-tvl_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."total-tvl_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."total-tvl_blockchaintype_enum_old" RENAME TO "total-tvl_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TABLE "total-tvl" ADD CONSTRAINT "UQ_7fe5b00781f6564ec055b4f88ab" UNIQUE ("blockchainType", "exchangeId", "timestamp")`);
        await queryRunner.query(`CREATE TYPE "public"."tvl_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "tvl" ALTER COLUMN "exchangeId" TYPE "public"."tvl_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."tvl_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."tvl_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."tvl_exchangeid_enum_old" RENAME TO "tvl_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."tvl_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "tvl" ALTER COLUMN "blockchainType" TYPE "public"."tvl_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."tvl_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."tvl_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."tvl_blockchaintype_enum_old" RENAME TO "tvl_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TABLE "tvl" ADD CONSTRAINT "UQ_837985c1c667096fcb6aba2a437" UNIQUE ("blockchainType", "exchangeId", "evt_block_time", "evt_block_number", "strategyId", "pairName", "symbol", "address", "tvl", "reason", "transaction_index")`);
        await queryRunner.query(`CREATE INDEX "IDX_e8b3d16260b7dea43e343e3366" ON "tvl" ("blockchainType", "exchangeId", "pairId") `);
        await queryRunner.query(`CREATE INDEX "IDX_488c5516e8c72b2686e744bfed" ON "tvl" ("blockchainType", "exchangeId", "address") `);
        await queryRunner.query(`CREATE TYPE "public"."tokens_exchangeid_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota', 'mantle', 'sei')`);
        await queryRunner.query(`ALTER TABLE "tokens" ALTER COLUMN "exchangeId" TYPE "public"."tokens_exchangeid_enum_old" USING "exchangeId"::"text"::"public"."tokens_exchangeid_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."tokens_exchangeid_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."tokens_exchangeid_enum_old" RENAME TO "tokens_exchangeid_enum"`);
        await queryRunner.query(`CREATE TYPE "public"."tokens_blockchaintype_enum_old" AS ENUM('blast', 'celo', 'ethereum', 'iota-evm', 'mantle', 'sei-network')`);
        await queryRunner.query(`ALTER TABLE "tokens" ALTER COLUMN "blockchainType" TYPE "public"."tokens_blockchaintype_enum_old" USING "blockchainType"::"text"::"public"."tokens_blockchaintype_enum_old"`);
        await queryRunner.query(`DROP TYPE "public"."tokens_blockchaintype_enum"`);
        await queryRunner.query(`ALTER TYPE "public"."tokens_blockchaintype_enum_old" RENAME TO "tokens_blockchaintype_enum"`);
    }

}
